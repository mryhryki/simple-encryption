name: release_github_and_npmjs

on:
  push:
    branches:
      - main
    paths:
      - "package.json"
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check_version.outputs.changed }}
    permissions:
      contents: read
    steps:
      - name: Check default branch
        run: |
          if [[ "${GITHUB_REF_NAME}" != "main" ]]; then
            echo "This action only runs on the main branch."
            exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v5
      - name: Check that version in package.json has changed
        id: check_version
        run: |
          VERSION_OF_PACKAGE_JSON="v$(jq -r '.version' package.json)"
          echo "${VERSION_OF_PACKAGE_JSON}"
          VERSION_OF_GITHUB_RELEASE="$(gh release view --json tagName | jq -r .tagName)"
          echo "${VERSION_OF_GITHUB_RELEASE}"
          if [[ "v${VERSION_OF_PACKAGE_JSON}" == "${VERSION_OF_GITHUB_RELEASE}" ]]; then
            echo "No changes"
          else
            echo "Changed"
            echo "changed=YES" >> "${GITHUB_OUTPUT}"
          fi
        env:
          GH_TOKEN: ${{ github.token }}

  release:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.changed != ''
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: 24
      - name: Update npm
        run: npm install -g npm@latest
      - name: Install
        run: npm install
      - name: Check
        run: npm run check
      - name: Create Release to GitHub
        run: gh release create "v$(jq -r '.version' ./package.json)" --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Publish to npmjs.com
        run: |
          npm run build
          npm publish
